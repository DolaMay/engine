
vec2 SphereMapEncode (vec3 normal) {
  vec2 enc = normalize(normal.xy) * sqrt(-normal.z * 0.5 + 0.5);
  enc = enc * 0.5 + 0.5;
  return enc;
}

vec3 SphereMapDecode (vec4 encrypted) {
  vec4 nn = encrypted * vec4(2, 2, 0, 0) + vec4(-1, -1, 1, -1);
  float l = dot(nn.xyz, nn.xyw);
  nn.z *= sqrt(l);
  return nn.xyz * 2.0 + vec3(0, 0, -1);
}

vec4 screen2WS(vec3 coord) {
  vec3 ndc = vec3(
	  2.0 * (coord.x - cc_viewPort.x) / cc_viewPort.z - 1.0,
    2.0 * (coord.y - cc_viewPort.y) / cc_viewPort.w - 1.0,
    2.0 * coord.z - 1.0);
  vec4 world = ((cc_matViewProjInv) * (vec4(ndc, 1.0)));
  world      = world / world.w;
  return world;
}